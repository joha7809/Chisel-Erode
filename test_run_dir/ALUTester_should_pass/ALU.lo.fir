FIRRTL version 1.2.0
circuit ALU :
  module ALU :
    input clock : Clock
    input reset : UInt<1>
    input io_operand1 : SInt<32> @[src/main/scala/ALU.scala 6:14]
    input io_operand2 : SInt<32> @[src/main/scala/ALU.scala 6:14]
    input io_opcode : UInt<4> @[src/main/scala/ALU.scala 6:14]
    output io_result : SInt<32> @[src/main/scala/ALU.scala 6:14]
    output io_zero_flag : UInt<1> @[src/main/scala/ALU.scala 6:14]

    node _T = eq(UInt<1>("h1"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T = add(io_operand1, io_operand2) @[src/main/scala/ALU.scala 18:45]
    node _io_result_T_1 = tail(_io_result_T, 1) @[src/main/scala/ALU.scala 18:45]
    node _io_result_T_2 = asSInt(_io_result_T_1) @[src/main/scala/ALU.scala 18:45]
    node _T_1 = eq(UInt<2>("h2"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_3 = sub(io_operand1, io_operand2) @[src/main/scala/ALU.scala 19:45]
    node _io_result_T_4 = tail(_io_result_T_3, 1) @[src/main/scala/ALU.scala 19:45]
    node _io_result_T_5 = asSInt(_io_result_T_4) @[src/main/scala/ALU.scala 19:45]
    node _T_2 = eq(UInt<2>("h3"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_6 = mul(io_operand1, io_operand2) @[src/main/scala/ALU.scala 20:45]
    node _T_3 = eq(UInt<3>("h4"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_7 = add(io_operand1, io_operand2) @[src/main/scala/ALU.scala 21:45]
    node _io_result_T_8 = tail(_io_result_T_7, 1) @[src/main/scala/ALU.scala 21:45]
    node _io_result_T_9 = asSInt(_io_result_T_8) @[src/main/scala/ALU.scala 21:45]
    node _T_4 = eq(UInt<3>("h5"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_10 = sub(io_operand1, io_operand2) @[src/main/scala/ALU.scala 22:44]
    node _io_result_T_11 = tail(_io_result_T_10, 1) @[src/main/scala/ALU.scala 22:44]
    node _io_result_T_12 = asSInt(_io_result_T_11) @[src/main/scala/ALU.scala 22:44]
    node _T_5 = eq(UInt<3>("h6"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_13 = or(io_operand1, io_operand2) @[src/main/scala/ALU.scala 24:44]
    node _io_result_T_14 = asSInt(_io_result_T_13) @[src/main/scala/ALU.scala 24:44]
    node _T_6 = eq(UInt<3>("h7"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_15 = not(io_operand1) @[src/main/scala/ALU.scala 25:32]
    node _io_result_T_16 = asSInt(_io_result_T_15) @[src/main/scala/ALU.scala 25:32]
    node _T_7 = eq(UInt<4>("h8"), io_opcode) @[src/main/scala/ALU.scala 17:20]
    node _io_result_T_17 = and(io_operand1, io_operand2) @[src/main/scala/ALU.scala 26:44]
    node _io_result_T_18 = asSInt(_io_result_T_17) @[src/main/scala/ALU.scala 26:44]
    node _GEN_0 = mux(_T_7, _io_result_T_18, asSInt(UInt<1>("h0"))) @[src/main/scala/ALU.scala 15:13 17:20 26:29]
    node _GEN_1 = mux(_T_6, _io_result_T_16, _GEN_0) @[src/main/scala/ALU.scala 17:20 25:29]
    node _GEN_2 = mux(_T_5, _io_result_T_14, _GEN_1) @[src/main/scala/ALU.scala 17:20 24:29]
    node _GEN_3 = mux(_T_4, _io_result_T_12, _GEN_2) @[src/main/scala/ALU.scala 17:20 22:29]
    node _GEN_4 = mux(_T_3, _io_result_T_9, _GEN_3) @[src/main/scala/ALU.scala 17:20 21:30]
    node _GEN_5 = mux(_T_2, _io_result_T_6, _GEN_4) @[src/main/scala/ALU.scala 17:20 20:30]
    node _GEN_6 = mux(_T_1, _io_result_T_5, _GEN_5) @[src/main/scala/ALU.scala 17:20 19:30]
    node _GEN_7 = mux(_T, _io_result_T_2, _GEN_6) @[src/main/scala/ALU.scala 17:20 18:30]
    node _T_8 = eq(io_result, asSInt(UInt<1>("h0"))) @[src/main/scala/ALU.scala 30:18]
    node _GEN_8 = mux(_T_8, UInt<1>("h1"), UInt<1>("h0")) @[src/main/scala/ALU.scala 30:26 31:18 33:18]
    io_result <= asSInt(bits(_GEN_7, 31, 0))
    io_zero_flag <= _GEN_8
